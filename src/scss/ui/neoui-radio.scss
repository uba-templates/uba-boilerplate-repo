@import "../core/minxin-variables";
@import "../core/minxin-mixins";
.u-radio {
  position: relative;

  font-size: $radio-label-font-size;
  line-height: $radio-label-height;

  display: inline-block;

  box-sizing: border-box;
  margin: 0;
  padding-left: 0;
  word-wrap: break-word;
  word-break: break-all;
  text-align: left;

  &.is-upgraded {
    padding-left: $radio-button-size + $radio-padding;
  }
}

.u-radio-button {
  line-height: $radio-label-height;

  .u-radio.is-upgraded & {
    // Hide input element, while still making it respond to focus.
    position: absolute;
    width: 0;
    height: 0;
    margin: 0;
    padding: 0;
    opacity: 0;
    -ms-appearance: none;
    -moz-appearance: none;
    -webkit-appearance: none;
    appearance: none;
    border: none;
  }
}

.u-radio-outer-circle {
  position: absolute;
  top: $radio-top-offset;
  left: 0;

  display: inline-block;

  box-sizing: border-box;
  width: $radio-button-size;
  height: $radio-button-size;
  margin: 0;

  cursor: pointer;

  border: 1px solid $radio-off-color;
  border: 1px solid $radio-off-color-IE8 \9;
  border-radius: 50%;

  z-index: 2;

  .u-radio.is-checked & {
    border: 1px solid $radio-color;
  }

  fieldset[disabled] .u-radio,
  .u-radio.is-disabled & {
    border: 1px solid $radio-disabled-color;
    cursor: auto;
  }
}

.u-radio-inner-circle {
  position: absolute;
  z-index: 1;
  margin: 0;
  top: $radio-top-offset + $radio-inner-margin;
  left: $radio-inner-margin;

  box-sizing: border-box;
  width: $radio-button-size - ($radio-inner-margin * 2);
  height: $radio-button-size - ($radio-inner-margin * 2);

  cursor: pointer;

  @include material-animation-default(0.28s);
  transition-property: transform;
  transform: scale3d(0, 0, 0);
  display: none \9;
  border-radius: 50%;
  background: $radio-color;

  .u-radio.is-checked & {
    transform: scale3d(1, 1, 1);
    display: block \9;
  }

  fieldset[disabled] .u-radio &,
  .u-radio.is-disabled & {
    background: $radio-disabled-color;
    cursor: auto;
  }

  .u-radio.is-focused & {
    box-shadow: 0 0 0px 10px rgba(0, 0, 0, 0.1);
  }
}

.u-radio-label {
  cursor: pointer;

  fieldset[disabled] .u-radio &,
  .u-radio.is-disabled & {
    color: $radio-disabled-color;
    cursor: auto;
  }
}

.u-radio-ripple-container {
  position: absolute;
  z-index: 2;
  top: -(($radio-ripple-size - $radio-label-height) / 2);
  left: -(($radio-ripple-size - $radio-button-size) / 2);

  box-sizing: border-box;
  width: $radio-ripple-size;
  height: $radio-ripple-size;
  border-radius: 50%;

  cursor: pointer;

  overflow: hidden;
  -webkit-mask-image: -webkit-radial-gradient(circle, white, black);

  //& .mdl-ripple {
    background: $radio-color;
  //}

  fieldset[disabled] .u-radio &,
  .u-radio.is-disabled & {
    cursor: auto;
  }

  fieldset[disabled] .u-radio{
    background: transparent;
  }
}



.u-radio-primary {
  @include radio-styles-variant($radio-primary-bg);
}

// Modifier: `radio-success`
// -------------------------

.u-radio-success {
  @include radio-styles-variant($radio-success-bg);
}

// Modifier: `radio-info`
// -------------------------

.u-radio-info {
  @include radio-styles-variant($radio-info-bg);
}

// Modifier: `radio-warning`
// -------------------------

.u-radio-warning {
  @include radio-styles-variant($radio-warning-bg);
}

// Modifier: `radio-danger`
// -------------------------

.u-radio-danger {
  @include radio-styles-variant($radio-danger-bg);
}

// Modifier: `radio-dark`
// -------------------------

.u-radio-dark {
  @include radio-styles-variant($radio-dark-bg);
}