@import "../core/minxin-variables";
@import "../core/minxin-mixins";

.u-badge {
  position : relative;
  white-space: nowrap;
  margin-right: ($badge-size + $badge-padding);

  &:not([data-badge]) {
    margin-right: auto;
  }

  &[data-badge]:after {
    content: attr(data-badge);

    display: flex;
    display:block;\9
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    align-content: center;
    align-items: center;

    position: absolute;
    top: -($badge-size / 2);
    left: 10px;

    .u-button & {
      top: -10px;
      right: -5px;
    }

    font-family: $preferred_font;
    font-weight: 600;
    font-size: $badge-font-size;
    min-width: ($badge-size/2);
    padding: 0 6px;
    height: 18px;
    border-radius : ($badge-size/2);

    background: $badge-background;
    color: $badge-color;
    box-sizing: border-box;
  }

  &.u-badge-no-background {
    &[data-badge]:after {
      color: $badge-color-inverse;
      background: $badge-background-inverse;

      box-shadow: 0 0 1px gray;
    }
  }
  &.u-badge-overlap {
    margin-right: ($badge-size - $badge-overlap);
    &:after {
      right: -($badge-size - $badge-overlap);
    }
  }
}



.u-badge-primary.u-badge[data-badge]:after {
  @include badge-variant($badge-primary-color, $badge-primary-bg);
}

 .u-badge-success.u-badge[data-badge]:after {
   @include badge-variant($badge-success-color, $badge-success-bg);
}


.u-badge-info.u-badge[data-badge]:after{
  @include badge-variant($badge-info-color, $badge-info-bg);
}

.u-badge-warning.u-badge[data-badge]:after {
 @include badge-variant($badge-warning-color, $badge-warning-bg);
}

.u-badge-danger.u-badge[data-badge]:after {
 @include badge-variant($badge-danger-color, $badge-danger-bg);
}

.u-badge-dark.u-badge[data-badge]:after {
  @include  badge-variant($badge-dark-color, $badge-dark-bg);
}

